class Linked{	
	Node head;
	int size;	
	Linked(){
		size = 0;
	}
	boolean isEmpty(){
		return size == 0;
	}
	void add(int val){
		Node node = new Node(val);		
		if(isEmpty()){
			head = node;
		}else{
			Node temp = head;
			while(temp.next != null){
				temp = temp.next;
			}
			temp.next = node;
		}
		size++;
	}	
	void display(){
		Node temp = head;
		while(temp.next != null){
			System.out.print(temp.val + " ");
			temp = temp.next;
		}
		System.out.println(temp.val);
	}
	// REMOVE DUPLICATE IN NODES //
	void duplicate(){
		Node node = head;
		while(node.next != null){
		   if(node.val == node.next.val){
		       node.next = node.next.next;
   		}else{
   			node = node.next;
   		}
		}
	}
	//
	public class Node{
	    int val;
	    Node next;		
		Node(int val){
			this.val = val;
		}
		Node(int val, Node next){
			this.val = val;
			this.next = next;
		}
	}	
}
class Main {
	public static void main(String[] args) {
		Linked list = new Linked();
		list.add(1);
		list.add(1);
		list.add(1);
		list.add(2);
		list.add(3);
		list.add(4);
		list.add(4);
		list.display();
		System.out.println();
		System.out.println("Remove Duplicates");
		list.duplicate();
		list.display();
	}
}}
}