class Linked{
	Node head;
	Node tail;
	int size;	
	public Linked(){
		this.size = 0;
	}
	boolean isEmpty(){
		return size == 0;
	}
	// add last
	void addLast(int val){
		Node node = new Node(val);
		if(isEmpty()){
			head = node;
		}else{
			Node temp = head;
			while(temp.next != null){
				temp = temp.next;
			}
			temp.next = node;
			tail = node;
		}
		size++;
	}
	// connect the tail int pos
	void pos(int pos){
		Node temp = head;
		for(int i = 0; i < pos; i++){
			temp = temp.next;
		}
		tail.next = temp;
	}
	// CHECK AND RETURN THE START OF CYCLE LINKED LIST CYCLE //
     Node detectCycle(){
        Node fast = head;
        Node slow = head;
        while(fast != null && fast.next != null){
        	slow = slow.next;
        	fast = fast.next.next;
        	if(slow == fast){
        		slow = head;
        		while(slow != fast){
        			slow = slow.next;
        			fast = fast.next;
        		}
        		return slow;
        	}
        }
        
        return null;
     }
	//
		// display
	void display(){
		Node temp = head;
		if(temp == null){
			return;
		}
		System.out.println("Head: " + head.val + " Tail: " + tail.val);
		do{
			System.out.print(temp.val + " -> ");
			temp = temp.next;
		}while(temp != tail);
		System.out.print(tail.val);
		System.out.print(" End");
 /// TEST THE INDEX OF FIRST CYCLE////
 	System.out.println();
		Node ans = detectCycle();
		System.out.println("Tail connects to nodes Index: " + ans.val);
	}
	private class Node{
		int val;
		Node next;
		public Node(int val){
			this.val = val;
		}
		public Node(int val, Node next){
			this.val = val;
			this.next = next;
		}
	}
}
public class Main {
	public static void main(String[] args) {
		Linked list = new Linked();
  /*	list.addLast(3);
		list.addLast(2);
		list.addLast(0);
		list.addLast(-4);
		list.pos(1);
	*/
	    list.addLast(1); 
	    list.addLast(2);
	    list.addLast(3);
	    list.addLast(5);
	    list.addLast(6);
		list.addLast(7);
	    list.addLast(8);
	    list.addLast(9);
	    list.pos(4);
	    //list.pos(0);
	 
	    
	    
		list.display();
		System.out.println();
		
	}
}