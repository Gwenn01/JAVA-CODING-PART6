class Linked{
	Node head;
	int size;	
	public Linked(){
		this.size = 0;
	}
	boolean isEmpty(){
		return size == 0;
	}
	// add last
	void addLast(int val){
		Node node = new Node(val);
		if(isEmpty()){
			head = node;
		}else{
			Node temp = head;
			while(temp.next != null){
				temp = temp.next;
			}
			temp.next = node;
		}
		size++;
	}
	// SWAP NODES IN PAIR //
	Node swapPair(Node head){
		if(head == null || head.next == null){
			return head;
		}
		Node current = head;
		Node prev = null;
		
		while(current != null){
	//hold the last and next last to point
			Node last = prev;
			Node newEnd = current;
			
			//reversing
			Node Next = current.next;
			for(int i = 0; current != null && i < 2; i++){
				current.next = prev;
				prev = current;
				current = Next;
				if(Next != null){
					Next = Next.next;
				}
			}
			// pointing to new start
			if(last == null){
				head = prev;
			}else{
				last.next = prev;
			}
		   // pointing to new last
			newEnd.next = current;
			prev = newEnd;	
		}
		
		return head;
	}
	//
	// display ans
	void displayAns(){
		Node temp = swapPair(this.head);
		if(temp == null){
			return;
		}
		System.out.println("Head: " + head.val);
		while(temp.next != null){
			System.out.print(temp.val + " -> ");
			temp = temp.next;
		}
		System.out.print(temp.val);
		System.out.println(" End");
		System.out.println();
	}
	// display
	void display(){
		Node temp = head;
		if(temp == null){
			return;
		}
		System.out.println("Head: " + head.val);
		while(temp.next != null){
			System.out.print(temp.val + " -> ");
			temp = temp.next;
		}
		System.out.print(temp.val);
		System.out.println(" End");
		System.out.println();
	}
	private class Node{
		int val;
		Node next;
		public Node(int val){
			this.val = val;
		}
		public Node(int val, Node next){
			this.val = val;
			this.next = next;
		}
	}
}
public class Main {
	public static void main(String[] args) {
		Linked list = new Linked();
		list.addLast(1);
		list.addLast(2);
		list.addLast(3);
	//	list.addLast(4);
		list.display();
		
		System.out.println("SWAP PAIR");
		list.displayAns();
	}
}