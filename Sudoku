public class Main {
	public static void main(String[] args) {
		int[][] board = {
    {0, 4, 0, 0, 0, 0, 7, 0, 0},
    {0, 0, 0, 6, 9, 0, 0, 0, 0},
    {0, 0, 0, 2, 0, 0, 0, 0, 0},
    {0, 0, 1, 9, 3, 0, 0, 0, 0},
    {0, 8, 0, 0, 0, 0, 0, 4, 7},
    {0, 0, 0, 0, 0, 0, 6, 0, 0},
    {6, 0, 0, 0, 0, 0, 0, 2, 0},
    {3, 0, 0, 0, 0, 7, 0, 0, 0},
    {0, 0, 0, 0, 8, 0, 0, 0, 0},
};
     System.out.println(solver(board));
	}
	static boolean solver(int[][] board){
		
		for(int row = 0; row < board.length; row++){
		   for(int col = 0; col < board.length; col++){
		      if(board[row][col] == 0){
		      	for(int num = 1; num <= board.length; num++){
		      		if(isCorrectPosition(board, row, col, num)){
		      		   board[row][col] = num;
		      		   
		      		   if(solver(board)){
		      		   	
		      		   	return true;
		      		   }else{
		      		   	board[row][col] = 0;
		      		   }
		      		}
		      	}
		      	return false;
		      }
		   }	
		}
		display(board);
		System.out.println();
		return true;	
	}
	static boolean isCorrectPosition(int[][] board, int row, int col, int number){
		int length = board.length;
		// check the row
		for(int i = 0; i < length; i++){
			if(board[i][col] == number){
				return false;
			}
		}
		// check the col
		for(int i = 0; i < length; i++){
		   if(board[row][i] == number){
		   	return false;
    		}	
		}
		//check the  box
		int sqrt = (int)Math.sqrt(board.length);
		int startRow = row - row % sqrt;
		int startCol = col - col % sqrt;
		for(int i = startRow; i < startRow + sqrt;i++){
			for(int j = startCol; j < startCol + sqrt;j++){
			   if(board[i][j] == number){
			   	return false;
			   }
	    	}	
		}
		
		return true;
	}
	//
	static void display(int[][] board){
		for(int i = 0; i < board.length; i++){
			for(int j = 0; j < board.length; j++){
				System.out.print(board[i][j] + " ");
			}
			System.out.println();
		}
	}
}