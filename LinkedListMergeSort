class Linked{
	Node head;
	int size;	
	public Linked(){
		this.size = 0;
	}
	boolean isEmpty(){
		return size == 0;
	}
	// add last
	void addLast(int val){
		Node node = new Node(val);
		if(isEmpty()){
			head = node;
		}else{
			Node temp = head;
			while(temp.next != null){
				temp = temp.next;
			}
			temp.next = node;
		}
		size++;
	}
	// MERGE SORT LIST //
	Node mergeSort(Node head){
		if(head == null || head.next == null){
			return head;
		}
		Node mid = getMid(head);
        Node left = head;
        Node right = mid.next;
        mid.next = null;
        
        left = mergeSort(left);
        right = mergeSort(right);
        
		return merge(left, right);
	}
	// GET MID
    Node getMid(Node head){
    	if(head == null){
    		return head;
    	}	
    	Node slow = head;
    	Node fast = head;
    	
    	while(fast.next != null && fast.next.next != null){
    		slow = slow.next;
        	fast = fast.next.next;
    	}
    	return slow;	
    }
    // MERGE THE LIST
    Node merge(Node left, Node right){
       Node temp = new Node();
       Node mix = temp;
       while(left != null && right != null){
       	if(left.val < right.val){
       		mix.next = left;
       		left = left.next;
       	}else{
       		mix.next = right;
       		right = right.next;
       	}
       	mix = mix.next;
       }
       
       if(left != null){
       	mix.next = left;
       }else{
           mix.next = right;
       }
       return temp.next;    
    }
    // DISPLAY THE ANSWER //
    // display
	void displayAns(){
		Node temp = mergeSort(head);
		if(temp == null){
			return;
		}
		System.out.println("Head: " + head.val);
		while(temp.next != null){
			System.out.print(temp.val + " -> ");
			temp = temp.next;
		}
		System.out.print(temp.val);
		System.out.print(" End");
	}
	// display
	void display(){
		Node temp = head;
		if(temp == null){
			return;
		}
		System.out.println("Head: " + head.val);
		while(temp.next != null){
			System.out.print(temp.val + " -> ");
			temp = temp.next;
		}
		System.out.print(temp.val);
		System.out.print(" End");
	}
	private class Node{
		int val;
		Node next;
		public Node(){		
		}
		public Node(int val){
			this.val = val;
		}
		public Node(int val, Node next){
			this.val = val;
			this.next = next;
		}
	}
}
public class Main {
	public static void main(String[] args) {
		Linked list = new Linked();
		list.addLast(3); 
	    list.addLast(4);
	    list.addLast(1);
	   /* list.addLast(4);
	    list.addLast(3);
		list.addLast(6); */
		list.display();
		System.out.println();
		System.out.println();
		
		System.out.println("MERGE SORT: ");
		list.displayAns();
	}
};
		list.displayAns();
	}
}t.println("MERGE SORT: ");
		list.displayAns();
	}
}